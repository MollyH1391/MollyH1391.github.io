@model ResetPasswordDataModel

@{
    ViewData["Title"] = "重設密碼";
    Layout = "_Login";
}

<div class="row justify-content-center">

    <div class="col-xl-10 col-lg-12 col-md-9">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-6 d-none d-lg-block bg-password-image"></div>
                    <div class="col-lg-6">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-2">重設密碼</h1>
                            </div>
                            <div id="app" v-cloak>
                                <form class="user" method="post" asp-controller="Account" asp-action="ResetPassword">
                                    <input type="text" name="Email" hidden/>
                                    <div class="form-group">
                                        <label for="exampleInputPassword">新密碼</label>
                                        @*<input type="password" name="Password" class="form-control form-control-user"
                                            id="exampleInputEmail" aria-describedby="emailHelp">*@
                                        <input type="password" name="Password" v-model="inputData.password" :class="{ 'is-invalid': inputDataCheck.passwordError }" class="form-control form-control-user"
                                            id="exampleInputPassword">
                                        <div class="text-danger small mt-1">
                                            {{ inputDataCheck.passwordErrorMsg }}
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputNewPassword">再次輸入新密碼</label>
                                        @*<input type="password" name="PasswordCheck" class="form-control form-control-user"
                                            id="exampleInputNewEmail" aria-describedby="emailHelp">*@
                                        <input type="password" name="PasswordCheck" v-model="inputData.passwordCheck" :class="{ 'is-invalid': inputDataCheck.passwordError }" class="form-control form-control-user"
                                            id="exampleInputNewPassword">
                                        <div class="text-danger small mt-1">
                                            {{ inputDataCheck.passwordCheckErrorMsg }}
                                        </div>
                                    </div>
                                    <span class="d-block mt-2 text_pink mb-2">@ViewData["ErrorMessage"]</span>
                                    <button :disabled="!addVerify" type="submit" class="btn btn-pink btn-user btn-block">
                                        重設密碼
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>

@section endJS
{
    <script src="~/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script>
        let app = new Vue({
            el: '#app',
            data: {
                inputData: {
                    password: '',
                    passwordCheck: ''
                },
                inputDataCheck: {
                    passwordError: false,
                    passwordErrorMsg: '',
                    passwordCheckError: false,
                    passwordCheckErrorMsg: ''
                },
                addVerify: false
            },
            watch: {
                'inputData.password': {
                    handler(){
                        let passwordRegex = /^(?=.*\d)(?=.*[a-zA-Z]).{6,64}$/
                        
                        if(this.inputData.password == ''){
                            this.inputDataCheck.passwordError = true
                            this.inputDataCheck.passwordErrorMsg = '新密碼不得為空'
                        }
                        else if (this.inputData.password.length < 6){
                            this.inputDataCheck.passwordError = true
                            this.inputDataCheck.passwordErrorMsg = '密碼最少需6個字元'
                        }
                        else if (!passwordRegex.test(this.inputData.password)){
                            this.inputDataCheck.passwordError = true
                            this.inputDataCheck.passwordErrorMsg = '密碼須為英數字混合!'
                        }
                        else{
                            this.inputDataCheck.passwordError = false
                            this.inputDataCheck.passwordErrorMsg = ''
                        }
                        this.checkVerify()
                    }
                },
                'inputData.passwordCheck': {
                    handler(){
                        if(this.inputData.password == ''){
                            this.inputDataCheck.passwordCheckError = true
                            this.inputDataCheck.passwordCheckErrorMsg = '再次輸入新密碼不得為空'
                        }
                        else if (this.inputData.passwordCheck != this.inputData.password){
                                this.inputDataCheck.passwordCheckError = true
                                this.inputDataCheck.passwordCheckErrorMsg = '密碼與第一次輸入不符合'
                            }
                        else{
                            this.inputDataCheck.passwordCheckError = false
                            this.inputDataCheck.passwordCheckErrorMsg = ''
                        }
                        this.checkVerify()
                    }
                }
            },
            methods: {
                checkVerify(){
                    for(let prop in this.inputDataCheck){
                        if(this.inputDataCheck[prop] == true){
                            this.addVerify = false
                            return 
                        }
                        this.addVerify = true
                    }
                }
            }
        })
    </script>
}
